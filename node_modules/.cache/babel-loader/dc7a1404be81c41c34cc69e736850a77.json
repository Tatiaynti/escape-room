{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { Genres } from \"const.js\";\nimport { setCurrentQuest, setGenre, setQuests } from \"./actions.js\";\nconst initialState = {\n  quests: [],\n  currentGenre: Genres.AllQuests,\n  currentQuest: {}\n};\nconst reducer = createReducer(initialState, builder => {\n  builder.addCase(setQuests, (state, action) => {\n    state.quests = action.payload.quests;\n  }).addCase(setGenre, (state, action) => {\n    state.currentGenre = action.payload.currentGenre;\n  }).addCase(setCurrentQuest, (state, action) => {\n    state.currentQuest = action.payload.currentQuest;\n  });\n});\nexport { reducer };","map":{"version":3,"sources":["/Users/tatiana/Desktop/grading-starter-pack-main/escape-room/src/store/reducer.js"],"names":["createReducer","Genres","setCurrentQuest","setGenre","setQuests","initialState","quests","currentGenre","AllQuests","currentQuest","reducer","builder","addCase","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,cAArD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,YAAY,EAAGN,MAAM,CAACO,SAFH;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;AAMA,MAAMC,OAAO,GAAGV,aAAa,CAACK,YAAD,EAAeM,OAAD,IAAa;AACtDA,EAAAA,OAAO,CACJC,OADH,CACWR,SADX,EACsB,CAACS,KAAD,EAAQC,MAAR,KAAmB;AACrCD,IAAAA,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAP,CAAeT,MAA9B;AACD,GAHH,EAIGM,OAJH,CAIWT,QAJX,EAIqB,CAACU,KAAD,EAAQC,MAAR,KAAmB;AACpCD,IAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAAP,CAAeR,YAApC;AACD,GANH,EAOGK,OAPH,CAOWV,eAPX,EAO4B,CAACW,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,IAAAA,KAAK,CAACJ,YAAN,GAAqBK,MAAM,CAACC,OAAP,CAAeN,YAApC;AACD,GATH;AAUD,CAX4B,CAA7B;AAaA,SAAQC,OAAR","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport { Genres } from \"const.js\";\nimport { setCurrentQuest, setGenre, setQuests } from \"./actions.js\";\n\nconst initialState = {\n  quests: [],\n  currentGenre : Genres.AllQuests,\n  currentQuest: {},\n};\n\nconst reducer = createReducer(initialState,(builder) => {\n  builder\n    .addCase(setQuests, (state, action) => {\n      state.quests = action.payload.quests;\n    })\n    .addCase(setGenre, (state, action) => {\n      state.currentGenre = action.payload.currentGenre;\n    })\n    .addCase(setCurrentQuest, (state, action) => {\n      state.currentQuest = action.payload.currentQuest;\n    })\n});\n\nexport {reducer};\n"]},"metadata":{},"sourceType":"module"}