{"ast":null,"code":"import { Genres } from \"const.js\";\nimport { createSelector } from \"reselect\";\n\nconst getCurrentGenre = state => state.currentGenre;\n\nconst getQuests = state => state.quests;\n\nconst getCurrentQuest = state => state.currentQuest; // const getQuestsByGenre = createSelector(\n//   getQuests,\n//   getCurrentGenre,\n//   (quests, currentGenre) => {\n//     if(currentGenre === Genres.AllQuests){\n//       return quests;\n//     }\n//     return quests.filter((quest) => quest.type === Genres[currentGenre]);\n//   }\n// );\n\n\nconst getQuestsByGenre = createSelector([getQuests, getCurrentGenre], (quests, genre) => {\n  if (genre === Genres.AllQuests) {\n    return quests;\n  }\n\n  return quests.filter(quest => quest.type === genre);\n});\nexport { getCurrentQuest, getCurrentGenre, getQuestsByGenre as getQuestsInCurrentGenre };","map":{"version":3,"sources":["/Users/tatiana/Desktop/grading-starter-pack-main/escape-room/src/store/selectors.js"],"names":["Genres","createSelector","getCurrentGenre","state","currentGenre","getQuests","quests","getCurrentQuest","currentQuest","getQuestsByGenre","genre","AllQuests","filter","quest","type","getQuestsInCurrentGenre"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAWA,KAAK,CAACC,YAAzC;;AACA,MAAMC,SAAS,GAAIF,KAAD,IAAWA,KAAK,CAACG,MAAnC;;AACA,MAAMC,eAAe,GAAIJ,KAAD,IAAWA,KAAK,CAACK,YAAzC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,gBAAgB,GAAGR,cAAc,CACrC,CAACI,SAAD,EAAYH,eAAZ,CADqC,EAErC,CAACI,MAAD,EAASI,KAAT,KAAmB;AACjB,MAAIA,KAAK,KAAKV,MAAM,CAACW,SAArB,EAAgC;AAC9B,WAAOL,MAAP;AACD;;AAED,SAAOA,MAAM,CAACM,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,IAAN,KAAeJ,KAAxC,CAAP;AACD,CARoC,CAAvC;AAWA,SAAQH,eAAR,EAAyBL,eAAzB,EAA0CO,gBAAgB,IAAIM,uBAA9D","sourcesContent":["import { Genres } from \"const.js\";\nimport { createSelector } from \"reselect\";\n\nconst getCurrentGenre = (state) => state.currentGenre;\nconst getQuests = (state) => state.quests;\nconst getCurrentQuest = (state) => state.currentQuest;\n\n// const getQuestsByGenre = createSelector(\n//   getQuests,\n//   getCurrentGenre,\n//   (quests, currentGenre) => {\n//     if(currentGenre === Genres.AllQuests){\n//       return quests;\n//     }\n//     return quests.filter((quest) => quest.type === Genres[currentGenre]);\n//   }\n// );\n\nconst getQuestsByGenre = createSelector(\n  [getQuests, getCurrentGenre],\n  (quests, genre) => {\n    if (genre === Genres.AllQuests) {\n      return quests;\n    }\n\n    return quests.filter((quest) => quest.type === genre);\n  },\n);\n\nexport {getCurrentQuest, getCurrentGenre, getQuestsByGenre as getQuestsInCurrentGenre};\n"]},"metadata":{},"sourceType":"module"}